{"version":3,"file":"static/js/4510.655a4b25.chunk.js","mappings":"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","sources":["../node_modules/@codemirror/legacy-modes/mode/nsis.js","../node_modules/@codemirror/legacy-modes/mode/simple-mode.js"],"sourcesContent":["import {simpleMode} from \"./simple-mode.js\"\nexport const nsis = simpleMode({\n  start:[\n    // Numbers\n    {regex: /(?:[+-]?)(?:0x[\\d,a-f]+)|(?:0o[0-7]+)|(?:0b[0,1]+)|(?:\\d+.?\\d*)/, token: \"number\"},\n\n    // Strings\n    { regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/, token: \"string\" },\n    { regex: /'(?:[^\\\\']|\\\\.)*'?/, token: \"string\" },\n    { regex: /`(?:[^\\\\`]|\\\\.)*`?/, token: \"string\" },\n\n    // Compile Time Commands\n    {regex: /^\\s*(?:\\!(include|addincludedir|addplugindir|appendfile|cd|delfile|echo|error|execute|packhdr|pragma|finalize|getdllversion|gettlbversion|system|tempfile|warning|verbose|define|undef|insertmacro|macro|macroend|makensis|searchparse|searchreplace))\\b/, token: \"keyword\"},\n\n    // Conditional Compilation\n    {regex: /^\\s*(?:\\!(if(?:n?def)?|ifmacron?def|macro))\\b/, token: \"keyword\", indent: true},\n    {regex: /^\\s*(?:\\!(else|endif|macroend))\\b/, token: \"keyword\", dedent: true},\n\n    // Runtime Commands\n    {regex: /^\\s*(?:Abort|AddBrandingImage|AddSize|AllowRootDirInstall|AllowSkipFiles|AutoCloseWindow|BGFont|BGGradient|BrandingText|BringToFront|Call|CallInstDLL|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|CRCCheck|CreateDirectory|CreateFont|CreateShortCut|Delete|DeleteINISec|DeleteINIStr|DeleteRegKey|DeleteRegValue|DetailPrint|DetailsButtonText|DirText|DirVar|DirVerify|EnableWindow|EnumRegKey|EnumRegValue|Exch|Exec|ExecShell|ExecShellWait|ExecWait|ExpandEnvStrings|File|FileBufSize|FileClose|FileErrorText|FileOpen|FileRead|FileReadByte|FileReadUTF16LE|FileReadWord|FileWriteUTF16LE|FileSeek|FileWrite|FileWriteByte|FileWriteWord|FindClose|FindFirst|FindNext|FindWindow|FlushINI|GetCurInstType|GetCurrentAddress|GetDlgItem|GetDLLVersion|GetDLLVersionLocal|GetErrorLevel|GetFileTime|GetFileTimeLocal|GetFullPathName|GetFunctionAddress|GetInstDirError|GetKnownFolderPath|GetLabelAddress|GetTempFileName|Goto|HideWindow|Icon|IfAbort|IfErrors|IfFileExists|IfRebootFlag|IfRtlLanguage|IfShellVarContextAll|IfSilent|InitPluginsDir|InstallButtonText|InstallColors|InstallDir|InstallDirRegKey|InstProgressFlags|InstType|InstTypeGetText|InstTypeSetText|Int64Cmp|Int64CmpU|Int64Fmt|IntCmp|IntCmpU|IntFmt|IntOp|IntPtrCmp|IntPtrCmpU|IntPtrOp|IsWindow|LangString|LicenseBkColor|LicenseData|LicenseForceSelection|LicenseLangString|LicenseText|LoadAndSetImage|LoadLanguageFile|LockWindow|LogSet|LogText|ManifestDPIAware|ManifestLongPathAware|ManifestMaxVersionTested|ManifestSupportedOS|MessageBox|MiscButtonText|Name|Nop|OutFile|Page|PageCallbacks|PEAddResource|PEDllCharacteristics|PERemoveResource|PESubsysVer|Pop|Push|Quit|ReadEnvStr|ReadINIStr|ReadRegDWORD|ReadRegStr|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|RMDir|SearchPath|SectionGetFlags|SectionGetInstTypes|SectionGetSize|SectionGetText|SectionIn|SectionSetFlags|SectionSetInstTypes|SectionSetSize|SectionSetText|SendMessage|SetAutoClose|SetBrandingImage|SetCompress|SetCompressor|SetCompressorDictSize|SetCtlColors|SetCurInstType|SetDatablockOptimize|SetDateSave|SetDetailsPrint|SetDetailsView|SetErrorLevel|SetErrors|SetFileAttributes|SetFont|SetOutPath|SetOverwrite|SetRebootFlag|SetRegView|SetShellVarContext|SetSilent|ShowInstDetails|ShowUninstDetails|ShowWindow|SilentInstall|SilentUnInstall|Sleep|SpaceTexts|StrCmp|StrCmpS|StrCpy|StrLen|SubCaption|Unicode|UninstallButtonText|UninstallCaption|UninstallIcon|UninstallSubCaption|UninstallText|UninstPage|UnRegDLL|Var|VIAddVersionKey|VIFileVersion|VIProductVersion|WindowIcon|WriteINIStr|WriteRegBin|WriteRegDWORD|WriteRegExpandStr|WriteRegMultiStr|WriteRegNone|WriteRegStr|WriteUninstaller|XPStyle)\\b/, token: \"keyword\"},\n    {regex: /^\\s*(?:Function|PageEx|Section(?:Group)?)\\b/, token: \"keyword\", indent: true},\n    {regex: /^\\s*(?:(Function|PageEx|Section(?:Group)?)End)\\b/, token: \"keyword\", dedent: true},\n\n    // Command Options\n    {regex: /\\b(?:ARCHIVE|FILE_ATTRIBUTE_ARCHIVE|FILE_ATTRIBUTE_HIDDEN|FILE_ATTRIBUTE_NORMAL|FILE_ATTRIBUTE_OFFLINE|FILE_ATTRIBUTE_READONLY|FILE_ATTRIBUTE_SYSTEM|FILE_ATTRIBUTE_TEMPORARY|HIDDEN|HKCC|HKCR(32|64)?|HKCU(32|64)?|HKDD|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_DYN_DATA|HKEY_LOCAL_MACHINE|HKEY_PERFORMANCE_DATA|HKEY_USERS|HKLM(32|64)?|HKPD|HKU|IDABORT|IDCANCEL|IDD_DIR|IDD_INST|IDD_INSTFILES|IDD_LICENSE|IDD_SELCOM|IDD_UNINST|IDD_VERIFY|IDIGNORE|IDNO|IDOK|IDRETRY|IDYES|MB_ABORTRETRYIGNORE|MB_DEFBUTTON1|MB_DEFBUTTON2|MB_DEFBUTTON3|MB_DEFBUTTON4|MB_ICONEXCLAMATION|MB_ICONINFORMATION|MB_ICONQUESTION|MB_ICONSTOP|MB_OK|MB_OKCANCEL|MB_RETRYCANCEL|MB_RIGHT|MB_RTLREADING|MB_SETFOREGROUND|MB_TOPMOST|MB_USERICON|MB_YESNO|MB_YESNOCANCEL|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SW_HIDE|SW_SHOWDEFAULT|SW_SHOWMAXIMIZED|SW_SHOWMINIMIZED|SW_SHOWNORMAL|SYSTEM|TEMPORARY)\\b/, token: \"atom\"},\n    {regex: /\\b(?:admin|all|auto|both|bottom|bzip2|components|current|custom|directory|false|force|hide|highest|ifdiff|ifnewer|instfiles|lastused|leave|left|license|listonly|lzma|nevershow|none|normal|notset|off|on|right|show|silent|silentlog|textonly|top|true|try|un\\.components|un\\.custom|un\\.directory|un\\.instfiles|un\\.license|uninstConfirm|user|Win10|Win7|Win8|WinVista|zlib)\\b/, token: \"builtin\"},\n\n    // LogicLib.nsh\n    {regex: /\\$\\{(?:And(?:If(?:Not)?|Unless)|Break|Case(?:Else)?|Continue|Default|Do(?:Until|While)?|Else(?:If(?:Not)?|Unless)?|End(?:If|Select|Switch)|Exit(?:Do|For|While)|For(?:Each)?|If(?:Cmd|Not(?:Then)?|Then)?|Loop(?:Until|While)?|Or(?:If(?:Not)?|Unless)|Select|Switch|Unless|While)\\}/, token: \"controlKeyword\", indent: true},\n\n    // FileFunc.nsh\n    {regex: /\\$\\{(?:BannerTrimPath|DirState|DriveSpace|Get(BaseName|Drives|ExeName|ExePath|FileAttributes|FileExt|FileName|FileVersion|Options|OptionsS|Parameters|Parent|Root|Size|Time)|Locate|RefreshShellIcons)\\}/, token: \"modifier\", dedent: true},\n\n    // Memento.nsh\n    {regex: /\\$\\{(?:Memento(?:Section(?:Done|End|Restore|Save)?|UnselectedSection))\\}/, token: \"controlKeyword\", dedent: true},\n\n    // TextFunc.nsh\n    {regex: /\\$\\{(?:Config(?:Read|ReadS|Write|WriteS)|File(?:Join|ReadFromEnd|Recode)|Line(?:Find|Read|Sum)|Text(?:Compare|CompareS)|TrimNewLines)\\}/, token: \"keyword\", dedent: true},\n\n    // WinVer.nsh\n    {regex: /\\$\\{(?:(?:At(?:Least|Most)|Is)(?:ServicePack|Win(?:7|8|10|95|98|200(?:0|3|8(?:R2)?)|ME|NT4|Vista|XP))|Is(?:NT|Server))\\}/, token: \"variable\", dedent: true},\n\n    // WordFunc.nsh\n    {regex: /\\$\\{(?:StrFilterS?|Version(?:Compare|Convert)|Word(?:AddS?|Find(?:(?:2|3)X)?S?|InsertS?|ReplaceS?))\\}/, token: \"keyword\", dedent: true},\n\n    // x64.nsh\n    {regex: /\\$\\{(?:RunningX64)\\}/, token: \"variable\", dedent: true},\n    {regex: /\\$\\{(?:Disable|Enable)X64FSRedirection\\}/, token: \"keyword\", dedent: true},\n\n    // Line Comment\n    {regex: /(#|;).*/, token: \"comment\"},\n\n    // Block Comment\n    {regex: /\\/\\*/, token: \"comment\", next: \"comment\"},\n\n    // Operator\n    {regex: /[-+\\/*=<>!]+/, token: \"operator\"},\n\n    // Variable\n    {regex: /\\$\\w+/, token: \"variable\"},\n\n    // Constant\n    {regex: /\\${[\\w\\.:-]+}/, token: \"variableName.constant\"},\n\n    // Language String\n    {regex: /\\$\\([\\w\\.:-]+\\)/, token: \"atom\"}\n  ],\n  comment: [\n    {regex: /.*?\\*\\//, token: \"comment\", next: \"start\"},\n    {regex: /.*/, token: \"comment\"}\n  ],\n  languageData: {\n    indentOnInput: /^\\s*((Function|PageEx|Section|Section(Group)?)End|(\\!(endif|macroend))|\\$\\{(End(If|Unless|While)|Loop(Until)|Next)\\})$/,\n    commentTokens: {line: \"#\", block: {open: \"/*\", close: \"*/\"}}\n  }\n});\n\n","export function simpleMode(states) {\n  ensureState(states, \"start\");\n  var states_ = {}, meta = states.languageData || {}, hasIndentation = false;\n  for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n    var list = states_[state] = [], orig = states[state];\n    for (var i = 0; i < orig.length; i++) {\n      var data = orig[i];\n      list.push(new Rule(data, states));\n      if (data.indent || data.dedent) hasIndentation = true;\n    }\n  }\n  return {\n    startState: function() {\n      return {state: \"start\", pending: null, indent: hasIndentation ? [] : null};\n    },\n    copyState: function(state) {\n      var s = {state: state.state, pending: state.pending, indent: state.indent && state.indent.slice(0)};\n      if (state.stack)\n        s.stack = state.stack.slice(0);\n      return s;\n    },\n    token: tokenFunction(states_),\n    indent: indentFunction(states_, meta),\n    languageData: meta\n  }\n};\n\nfunction ensureState(states, name) {\n  if (!states.hasOwnProperty(name))\n    throw new Error(\"Undefined state \" + name + \" in simple mode\");\n}\n\nfunction toRegex(val, caret) {\n  if (!val) return /(?:)/;\n  var flags = \"\";\n  if (val instanceof RegExp) {\n    if (val.ignoreCase) flags = \"i\";\n    val = val.source;\n  } else {\n    val = String(val);\n  }\n  return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n}\n\nfunction asToken(val) {\n  if (!val) return null;\n  if (val.apply) return val\n  if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n  var result = [];\n  for (var i = 0; i < val.length; i++)\n    result.push(val[i] && val[i].replace(/\\./g, \" \"));\n  return result;\n}\n\nfunction Rule(data, states) {\n  if (data.next || data.push) ensureState(states, data.next || data.push);\n  this.regex = toRegex(data.regex);\n  this.token = asToken(data.token);\n  this.data = data;\n}\n\nfunction tokenFunction(states) {\n  return function(stream, state) {\n    if (state.pending) {\n      var pend = state.pending.shift();\n      if (state.pending.length == 0) state.pending = null;\n      stream.pos += pend.text.length;\n      return pend.token;\n    }\n\n    var curState = states[state.state];\n    for (var i = 0; i < curState.length; i++) {\n      var rule = curState[i];\n      var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n      if (matches) {\n        if (rule.data.next) {\n          state.state = rule.data.next;\n        } else if (rule.data.push) {\n          (state.stack || (state.stack = [])).push(state.state);\n          state.state = rule.data.push;\n        } else if (rule.data.pop && state.stack && state.stack.length) {\n          state.state = state.stack.pop();\n        }\n\n        if (rule.data.indent)\n          state.indent.push(stream.indentation() + stream.indentUnit);\n        if (rule.data.dedent)\n          state.indent.pop();\n        var token = rule.token\n        if (token && token.apply) token = token(matches)\n        if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n          state.pending = [];\n          for (var j = 2; j < matches.length; j++)\n            if (matches[j])\n              state.pending.push({text: matches[j], token: rule.token[j - 1]});\n          stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n          return token[0];\n        } else if (token && token.join) {\n          return token[0];\n        } else {\n          return token;\n        }\n      }\n    }\n    stream.next();\n    return null;\n  };\n}\n\nfunction indentFunction(states, meta) {\n  return function(state, textAfter) {\n    if (state.indent == null || meta.dontIndentStates && meta.doneIndentState.indexOf(state.state) > -1)\n      return null\n\n    var pos = state.indent.length - 1, rules = states[state.state];\n    scan: for (;;) {\n      for (var i = 0; i < rules.length; i++) {\n        var rule = rules[i];\n        if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n          var m = rule.regex.exec(textAfter);\n          if (m && m[0]) {\n            pos--;\n            if (rule.next || rule.push) rules = states[rule.next || rule.push];\n            textAfter = textAfter.slice(m[0].length);\n            continue scan;\n          }\n        }\n      }\n      break;\n    }\n    return pos < 0 ? 0 : state.indent[pos];\n  };\n}\n"],"names":["nsis","simpleMode","start","regex","token","indent","dedent","next","comment","languageData","indentOnInput","commentTokens","line","block","open","close","states","ensureState","states_","meta","hasIndentation","state","hasOwnProperty","list","orig","i","length","data","push","Rule","startState","pending","copyState","s","slice","stack","tokenFunction","indentFunction","name","Error","this","val","caret","flags","RegExp","ignoreCase","source","String","toRegex","apply","replace","result","asToken","stream","pend","shift","pos","text","curState","rule","matches","sol","match","pop","indentation","indentUnit","j","backUp","join","textAfter","dontIndentStates","doneIndentState","indexOf","rules","scan","dedentIfLineStart","m","exec"],"sourceRoot":""}