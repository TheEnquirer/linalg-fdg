{"version":3,"file":"static/js/3545.cca2459c.chunk.js","mappings":"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","sources":["../node_modules/@codemirror/legacy-modes/mode/dtd.js"],"sourcesContent":["var type;\nfunction ret(style, tp) {type = tp; return style;}\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n\n  if (ch == \"<\" && stream.eat(\"!\") ) {\n    if (stream.eatWhile(/[\\-]/)) {\n      state.tokenize = tokenSGMLComment;\n      return tokenSGMLComment(stream, state);\n    } else if (stream.eatWhile(/[\\w]/)) return ret(\"keyword\", \"doindent\");\n  } else if (ch == \"<\" && stream.eat(\"?\")) { //xml declaration\n    state.tokenize = inBlock(\"meta\", \"?>\");\n    return ret(\"meta\", ch);\n  } else if (ch == \"#\" && stream.eatWhile(/[\\w]/)) return ret(\"atom\", \"tag\");\n  else if (ch == \"|\") return ret(\"keyword\", \"separator\");\n  else if (ch.match(/[\\(\\)\\[\\]\\-\\.,\\+\\?>]/)) return ret(null, ch);//if(ch === \">\") return ret(null, \"endtag\"); else\n  else if (ch.match(/[\\[\\]]/)) return ret(\"rule\", ch);\n  else if (ch == \"\\\"\" || ch == \"'\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  } else if (stream.eatWhile(/[a-zA-Z\\?\\+\\d]/)) {\n    var sc = stream.current();\n    if( sc.substr(sc.length-1,sc.length).match(/\\?|\\+/) !== null )stream.backUp(1);\n    return ret(\"tag\", \"tag\");\n  } else if (ch == \"%\" || ch == \"*\" ) return ret(\"number\", \"number\");\n  else {\n    stream.eatWhile(/[\\w\\\\\\-_%.{,]/);\n    return ret(null, null);\n  }\n}\n\nfunction tokenSGMLComment(stream, state) {\n  var dashes = 0, ch;\n  while ((ch = stream.next()) != null) {\n    if (dashes >= 2 && ch == \">\") {\n      state.tokenize = tokenBase;\n      break;\n    }\n    dashes = (ch == \"-\") ? dashes + 1 : 0;\n  }\n  return ret(\"comment\", \"comment\");\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (ch == quote && !escaped) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      escaped = !escaped && ch == \"\\\\\";\n    }\n    return ret(\"string\", \"tag\");\n  };\n}\n\nfunction inBlock(style, terminator) {\n  return function(stream, state) {\n    while (!stream.eol()) {\n      if (stream.match(terminator)) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      stream.next();\n    }\n    return style;\n  };\n}\n\nexport const dtd = {\n  startState: function() {\n    return {tokenize: tokenBase,\n            baseIndent: 0,\n            stack: []};\n  },\n\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null;\n    var style = state.tokenize(stream, state);\n\n    var context = state.stack[state.stack.length-1];\n    if (stream.current() == \"[\" || type === \"doindent\" || type == \"[\") state.stack.push(\"rule\");\n    else if (type === \"endtag\") state.stack[state.stack.length-1] = \"endtag\";\n    else if (stream.current() == \"]\" || type == \"]\" || (type == \">\" && context == \"rule\")) state.stack.pop();\n    else if (type == \"[\") state.stack.push(\"[\");\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    var n = state.stack.length;\n\n    if( textAfter.charAt(0) === ']' )n--;\n    else if(textAfter.substr(textAfter.length-1, textAfter.length) === \">\"){\n      if(textAfter.substr(0,1) === \"<\") {}\n      else if( type == \"doindent\" && textAfter.length > 1 ) {}\n      else if( type == \"doindent\")n--;\n      else if( type == \">\" && textAfter.length > 1) {}\n      else if( type == \"tag\" && textAfter !== \">\") {}\n      else if( type == \"tag\" && state.stack[state.stack.length-1] == \"rule\")n--;\n      else if( type == \"tag\")n++;\n      else if( textAfter === \">\" && state.stack[state.stack.length-1] == \"rule\" && type === \">\")n--;\n      else if( textAfter === \">\" && state.stack[state.stack.length-1] == \"rule\") {}\n      else if( textAfter.substr(0,1) !== \"<\" && textAfter.substr(0,1) === \">\" )n=n-1;\n      else if( textAfter === \">\") {}\n      else n=n-1;\n      //over rule them all\n      if(type == null || type == \"]\")n--;\n    }\n\n    return state.baseIndent + n * cx.unit;\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*[\\]>]$/\n  }\n};\n\n"],"names":["type","ret","style","tp","tokenBase","stream","state","quote","terminator","ch","next","eat","tokenize","eol","match","eatWhile","escaped","sc","current","substr","length","backUp","tokenSGMLComment","dashes","dtd","startState","baseIndent","stack","token","eatSpace","context","push","pop","indent","textAfter","cx","n","charAt","unit","languageData","indentOnInput"],"sourceRoot":""}