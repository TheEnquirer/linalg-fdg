{"version":3,"file":"static/js/8850.9add343b.chunk.js","mappings":"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","sources":["../node_modules/@codemirror/legacy-modes/mode/cypher.js"],"sourcesContent":["var wordRegexp = function(words) {\n  return new RegExp(\"^(?:\" + words.join(\"|\") + \")$\", \"i\");\n};\n\nvar tokenBase = function(stream/*, state*/) {\n  var ch = stream.next();\n  if (ch ==='\"') {\n    stream.match(/^.*?\"/);\n    return \"string\";\n  }\n  if (ch === \"'\") {\n    stream.match(/^.*?'/);\n    return \"string\";\n  }\n  if (/[{}\\(\\),\\.;\\[\\]]/.test(ch)) {\n    curPunc = ch;\n    return \"punctuation\";\n  } else if (ch === \"/\" && stream.eat(\"/\")) {\n    stream.skipToEnd();\n    return \"comment\";\n  } else if (operatorChars.test(ch)) {\n    stream.eatWhile(operatorChars);\n    return null;\n  } else {\n    stream.eatWhile(/[_\\w\\d]/);\n    if (stream.eat(\":\")) {\n      stream.eatWhile(/[\\w\\d_\\-]/);\n      return \"atom\";\n    }\n    var word = stream.current();\n    if (funcs.test(word)) return \"builtin\";\n    if (preds.test(word)) return \"def\";\n    if (keywords.test(word) || systemKeywords.test(word)) return \"keyword\";\n    return \"variable\";\n  }\n};\nvar pushContext = function(state, type, col) {\n  return state.context = {\n    prev: state.context,\n    indent: state.indent,\n    col: col,\n    type: type\n  };\n};\nvar popContext = function(state) {\n  state.indent = state.context.indent;\n  return state.context = state.context.prev;\n};\nvar curPunc;\nvar funcs = wordRegexp([\"abs\", \"acos\", \"allShortestPaths\", \"asin\", \"atan\", \"atan2\", \"avg\", \"ceil\", \"coalesce\", \"collect\", \"cos\", \"cot\", \"count\", \"degrees\", \"e\", \"endnode\", \"exp\", \"extract\", \"filter\", \"floor\", \"haversin\", \"head\", \"id\", \"keys\", \"labels\", \"last\", \"left\", \"length\", \"log\", \"log10\", \"lower\", \"ltrim\", \"max\", \"min\", \"node\", \"nodes\", \"percentileCont\", \"percentileDisc\", \"pi\", \"radians\", \"rand\", \"range\", \"reduce\", \"rel\", \"relationship\", \"relationships\", \"replace\", \"reverse\", \"right\", \"round\", \"rtrim\", \"shortestPath\", \"sign\", \"sin\", \"size\", \"split\", \"sqrt\", \"startnode\", \"stdev\", \"stdevp\", \"str\", \"substring\", \"sum\", \"tail\", \"tan\", \"timestamp\", \"toFloat\", \"toInt\", \"toString\", \"trim\", \"type\", \"upper\"]);\nvar preds = wordRegexp([\"all\", \"and\", \"any\", \"contains\", \"exists\", \"has\", \"in\", \"none\", \"not\", \"or\", \"single\", \"xor\"]);\nvar keywords = wordRegexp([\"as\", \"asc\", \"ascending\", \"assert\", \"by\", \"case\", \"commit\", \"constraint\", \"create\", \"csv\", \"cypher\", \"delete\", \"desc\", \"descending\", \"detach\", \"distinct\", \"drop\", \"else\", \"end\", \"ends\", \"explain\", \"false\", \"fieldterminator\", \"foreach\", \"from\", \"headers\", \"in\", \"index\", \"is\", \"join\", \"limit\", \"load\", \"match\", \"merge\", \"null\", \"on\", \"optional\", \"order\", \"periodic\", \"profile\", \"remove\", \"return\", \"scan\", \"set\", \"skip\", \"start\", \"starts\", \"then\", \"true\", \"union\", \"unique\", \"unwind\", \"using\", \"when\", \"where\", \"with\", \"call\", \"yield\"]);\nvar systemKeywords = wordRegexp([\"access\", \"active\", \"assign\", \"all\", \"alter\", \"as\", \"catalog\", \"change\", \"copy\", \"create\", \"constraint\", \"constraints\", \"current\", \"database\", \"databases\", \"dbms\", \"default\", \"deny\", \"drop\", \"element\", \"elements\", \"exists\", \"from\", \"grant\", \"graph\", \"graphs\", \"if\", \"index\", \"indexes\", \"label\", \"labels\", \"management\", \"match\", \"name\", \"names\", \"new\", \"node\", \"nodes\", \"not\", \"of\", \"on\", \"or\", \"password\", \"populated\", \"privileges\", \"property\", \"read\", \"relationship\", \"relationships\", \"remove\", \"replace\", \"required\", \"revoke\", \"role\", \"roles\", \"set\", \"show\", \"start\", \"status\", \"stop\", \"suspended\", \"to\", \"traverse\", \"type\", \"types\", \"user\", \"users\", \"with\", \"write\"]);\nvar operatorChars = /[*+\\-<>=&|~%^]/;\n\nexport const cypher = {\n  startState: function() {\n    return {\n      tokenize: tokenBase,\n      context: null,\n      indent: 0,\n      col: 0\n    };\n  },\n  token: function(stream, state) {\n    if (stream.sol()) {\n      if (state.context && (state.context.align == null)) {\n        state.context.align = false;\n      }\n      state.indent = stream.indentation();\n    }\n    if (stream.eatSpace()) {\n      return null;\n    }\n    var style = state.tokenize(stream, state);\n    if (style !== \"comment\" && state.context && (state.context.align == null) && state.context.type !== \"pattern\") {\n      state.context.align = true;\n    }\n    if (curPunc === \"(\") {\n      pushContext(state, \")\", stream.column());\n    } else if (curPunc === \"[\") {\n      pushContext(state, \"]\", stream.column());\n    } else if (curPunc === \"{\") {\n      pushContext(state, \"}\", stream.column());\n    } else if (/[\\]\\}\\)]/.test(curPunc)) {\n      while (state.context && state.context.type === \"pattern\") {\n        popContext(state);\n      }\n      if (state.context && curPunc === state.context.type) {\n        popContext(state);\n      }\n    } else if (curPunc === \".\" && state.context && state.context.type === \"pattern\") {\n      popContext(state);\n    } else if (/atom|string|variable/.test(style) && state.context) {\n      if (/[\\}\\]]/.test(state.context.type)) {\n        pushContext(state, \"pattern\", stream.column());\n      } else if (state.context.type === \"pattern\" && !state.context.align) {\n        state.context.align = true;\n        state.context.col = stream.column();\n      }\n    }\n    return style;\n  },\n  indent: function(state, textAfter, cx) {\n    var firstChar = textAfter && textAfter.charAt(0);\n    var context = state.context;\n    if (/[\\]\\}]/.test(firstChar)) {\n      while (context && context.type === \"pattern\") {\n        context = context.prev;\n      }\n    }\n    var closing = context && firstChar === context.type;\n    if (!context) return 0;\n    if (context.type === \"keywords\") return null\n    if (context.align) return context.col + (closing ? 0 : 1);\n    return context.indent + (closing ? 0 : cx.unit);\n  }\n};\n"],"names":["curPunc","wordRegexp","words","RegExp","join","tokenBase","stream","ch","next","match","test","eat","skipToEnd","operatorChars","eatWhile","word","current","funcs","preds","keywords","systemKeywords","pushContext","state","type","col","context","prev","indent","popContext","cypher","startState","tokenize","token","sol","align","indentation","eatSpace","style","column","textAfter","cx","firstChar","charAt","closing","unit"],"sourceRoot":""}