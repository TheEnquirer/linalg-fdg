{"version":3,"file":"static/js/1198.77090e32.chunk.js","mappings":"8GAAA,SAASA,EAAMC,GAEb,IADA,IAAIC,EAAM,GAAIF,EAAQC,EAAIE,MAAM,KACvBC,EAAI,EAAGA,EAAIJ,EAAMK,SAAUD,EAAG,CACrC,IAAIE,EAAUN,EAAMI,GAAGG,cACnBC,EAAWR,EAAMI,GAAGK,OAAO,GAAGF,cAAgBP,EAAMI,GAAGM,MAAM,GACjER,EAAIF,EAAMI,KAAM,EAChBF,EAAII,IAAW,EACfJ,EAAIM,IAAY,EAElB,OAAON,EAGT,SAASS,EAASC,GAEhB,OADAA,EAAOC,SAAS,WACT,O,0CAGT,IAeIC,EAfAC,EAAQf,EAAM,QACdgB,EAAQ,CAAC,IAAKL,EAAU,EAAKA,GAG7BM,EAAWjB,EAAM,stBAQjBkB,EAAgBlB,EAAM,sEAEtBmB,EAAiB,wCAGrB,SAASC,EAAUR,EAAQS,GACzB,IAqDoBC,EArDhBC,EAAKX,EAAOY,OAChB,GAAIR,EAAMO,GAAK,CACb,IAAIE,EAAST,EAAMO,GAAIX,EAAQS,GAC/B,IAAe,IAAXI,EAAkB,OAAOA,EAE/B,GAAU,KAANF,EAEF,OADAF,EAAMK,UA+CYJ,EA/CYC,EAgDzB,SAASX,EAAQS,GAEtB,IADA,IAAqBG,EAAjBG,GAAU,EAAaC,GAAM,EACA,OAAzBJ,EAAOZ,EAAOY,SAAiB,CACrC,GAAIA,GAAQF,IAAUK,EAAS,CAACC,GAAM,EAAM,MAC5CD,GAAWA,GAAmB,MAARH,EAIxB,OAFII,GAASD,IACXN,EAAMK,SAAWN,GACZ,mBAvDAC,EAAMK,SAASd,EAAQS,GAEhC,GAAU,KAANE,EAEF,OADAF,EAAMK,SA+BV,SAAqBJ,GACnB,OAAO,SAASV,EAAQS,GAEtB,IADA,IAAqBG,EAAjBG,GAAU,EAAaC,GAAM,EACA,OAAzBJ,EAAOZ,EAAOY,SAAiB,CACrC,GAAIA,GAAQF,IAAUK,EAAS,CAACC,GAAM,EAAM,MAC5CD,GAAWA,GAAmB,MAARH,EAIxB,OAFII,GAASD,IACXN,EAAMK,SAAWN,GACZ,UAxCUS,CAAYN,GACtBF,EAAMK,SAASd,EAAQS,GAEhC,GAAI,qBAAqBS,KAAKP,GAE5B,OADAT,EAAUS,EACH,KAET,GAAI,QAAQO,KAAKP,GAEf,OADAX,EAAOC,SAAS,WACT,SAET,GAAU,KAANU,GACEX,EAAOmB,IAAI,KAEb,OADAnB,EAAOoB,YACA,UAGX,GAAIb,EAAeW,KAAKP,GAEtB,OADAX,EAAOC,SAASM,GACT,WAETP,EAAOC,SAAS,WAChB,IAAIoB,EAAMrB,EAAOsB,UACjB,OAAIjB,EAASkB,qBAAqBF,EAAIG,gBAChClB,EAAciB,qBAAqBF,KAAMnB,EAAU,gBAChD,WAELC,EAAMoB,qBAAqBF,GAAa,OACrC,WA4BT,SAASI,EAAQC,EAAUC,EAAQC,EAAMC,EAAOC,GAC9CC,KAAKL,SAAWA,EAChBK,KAAKJ,OAASA,EACdI,KAAKH,KAAOA,EACZG,KAAKF,MAAQA,EACbE,KAAKD,KAAOA,EAEd,SAASE,EAAYvB,EAAOwB,EAAKL,GAC/B,OAAOnB,EAAMyB,QAAU,IAAIT,EAAQhB,EAAMiB,SAAUO,EAAKL,EAAM,KAAMnB,EAAMyB,SAE5E,SAASC,EAAW1B,GAClB,IAAI2B,EAAI3B,EAAMyB,QAAQN,KAGtB,MAFS,KAALQ,GAAiB,KAALA,GAAiB,KAALA,IAC1B3B,EAAMiB,SAAWjB,EAAMyB,QAAQR,UAC1BjB,EAAMyB,QAAUzB,EAAMyB,QAAQJ,KAIhC,IAAMO,EAAO,CAClBC,WAAY,SAASC,GACnB,MAAO,CACLzB,SAAU,KACVoB,QAAS,IAAIT,GAASc,EAAY,EAAG,OAAO,GAC5Cb,SAAU,EACVc,aAAa,IAIjBC,MAAO,SAASzC,EAAQS,GACtB,IAAIiC,EAAMjC,EAAMyB,QAMhB,GALIlC,EAAO2C,QACQ,MAAbD,EAAIb,QAAea,EAAIb,OAAQ,GACnCpB,EAAMiB,SAAW1B,EAAO4C,cACxBnC,EAAM+B,aAAc,GAElBxC,EAAO6C,WAAY,OAAO,KAC9B3C,EAAU,KACV,IAAI4C,GAASrC,EAAMK,UAAYN,GAAWR,EAAQS,GAClD,GAAa,WAATqC,GAA+B,QAATA,EAAiB,OAAOA,EAGlD,GAFiB,MAAbJ,EAAIb,QAAea,EAAIb,OAAQ,GAEnB,KAAX3B,GAA6B,KAAXA,GAA+B,aAAZwC,EAAId,KACzC,GAAe,KAAX1B,EAAgB8B,EAAYvB,EAAOT,EAAO2B,SAAU,UACxD,GAAe,KAAXzB,EAAgB8B,EAAYvB,EAAOT,EAAO2B,SAAU,UACxD,GAAe,KAAXzB,EAAgB8B,EAAYvB,EAAOT,EAAO2B,SAAU,UACxD,GAAe,KAAXzB,EAAgB,CACvB,KAAmB,aAAZwC,EAAId,MAAqBc,EAAMP,EAAW1B,GAEjD,IADgB,KAAZiC,EAAId,OAAac,EAAMP,EAAW1B,IACnB,aAAZiC,EAAId,MAAqBc,EAAMP,EAAW1B,QAE1CP,GAAWwC,EAAId,KAAMO,EAAW1B,IACpB,KAAZiC,EAAId,MAA2B,OAAZc,EAAId,MAA8B,aAAZc,EAAId,MAAkC,gBAAX1B,IAC3E8B,EAAYvB,EAAOT,EAAO2B,SAAU,kBAX6BQ,EAAW1B,GAa9E,OADAA,EAAM+B,aAAc,EACbM,GAGTC,OAAQ,SAAStC,EAAOuC,EAAWC,GACjC,GAAIxC,EAAMK,UAAYN,GAA+B,MAAlBC,EAAMK,SAAkB,OAAO,EAClE,IAAIoC,EAAYF,GAAaA,EAAUnD,OAAO,GAAI6C,EAAMjC,EAAMyB,QAASiB,EAAUD,GAAaR,EAAId,KAClG,MAAgB,aAAZc,EAAId,KAA4Bc,EAAIhB,UAAyB,KAAbwB,EAAmB,EAAID,EAAGG,MACrEV,EAAIb,MAAca,EAAIf,QAAUwB,EAAU,EAAI,GAC3CT,EAAIhB,UAAYyB,EAAU,EAAIF,EAAGG,OAG/CC,aAAc,CACZC,cAAe,YACfC,cAAe,CAACC,KAAM","sources":["../node_modules/@codemirror/legacy-modes/mode/vhdl.js"],"sourcesContent":["function words(str) {\n  var obj = {}, words = str.split(\",\");\n  for (var i = 0; i < words.length; ++i) {\n    var allCaps = words[i].toUpperCase();\n    var firstCap = words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    obj[words[i]] = true;\n    obj[allCaps] = true;\n    obj[firstCap] = true;\n  }\n  return obj;\n}\n\nfunction metaHook(stream) {\n  stream.eatWhile(/[\\w\\$_]/);\n  return \"meta\";\n}\n\nvar atoms = words(\"null\"),\n    hooks = {\"`\": metaHook, \"$\": metaHook},\n    multiLineStrings = false;\n\nvar keywords = words(\"abs,access,after,alias,all,and,architecture,array,assert,attribute,begin,block,\" +\n                     \"body,buffer,bus,case,component,configuration,constant,disconnect,downto,else,elsif,end,end block,end case,\" +\n                     \"end component,end for,end generate,end if,end loop,end process,end record,end units,entity,exit,file,for,\" +\n                     \"function,generate,generic,generic map,group,guarded,if,impure,in,inertial,inout,is,label,library,linkage,\" +\n                     \"literal,loop,map,mod,nand,new,next,nor,null,of,on,open,or,others,out,package,package body,port,port map,\" +\n                     \"postponed,procedure,process,pure,range,record,register,reject,rem,report,return,rol,ror,select,severity,signal,\" +\n                     \"sla,sll,sra,srl,subtype,then,to,transport,type,unaffected,units,until,use,variable,wait,when,while,with,xnor,xor\");\n\nvar blockKeywords = words(\"architecture,entity,begin,case,port,else,elsif,end,for,function,if\");\n\nvar isOperatorChar = /[&|~><!\\)\\(*#%@+\\/=?\\:;}{,\\.\\^\\-\\[\\]]/;\nvar curPunc;\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n  if (hooks[ch]) {\n    var result = hooks[ch](stream, state);\n    if (result !== false) return result;\n  }\n  if (ch == '\"') {\n    state.tokenize = tokenString2(ch);\n    return state.tokenize(stream, state);\n  }\n  if (ch == \"'\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n  if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n    curPunc = ch;\n    return null;\n  }\n  if (/[\\d']/.test(ch)) {\n    stream.eatWhile(/[\\w\\.']/);\n    return \"number\";\n  }\n  if (ch == \"-\") {\n    if (stream.eat(\"-\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n  }\n  if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n  stream.eatWhile(/[\\w\\$_]/);\n  var cur = stream.current();\n  if (keywords.propertyIsEnumerable(cur.toLowerCase())) {\n    if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n    return \"keyword\";\n  }\n  if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n  return \"variable\";\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {end = true; break;}\n      escaped = !escaped && next == \"--\";\n    }\n    if (end || !(escaped || multiLineStrings))\n      state.tokenize = tokenBase;\n    return \"string\";\n  };\n}\nfunction tokenString2(quote) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {end = true; break;}\n      escaped = !escaped && next == \"--\";\n    }\n    if (end || !(escaped || multiLineStrings))\n      state.tokenize = tokenBase;\n    return \"string.special\";\n  };\n}\n\nfunction Context(indented, column, type, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.align = align;\n  this.prev = prev;\n}\nfunction pushContext(state, col, type) {\n  return state.context = new Context(state.indented, col, type, null, state.context);\n}\nfunction popContext(state) {\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\n// Interface\nexport const vhdl = {\n  startState: function(indentUnit) {\n    return {\n      tokenize: null,\n      context: new Context(-indentUnit, 0, \"top\", false),\n      indented: 0,\n      startOfLine: true\n    };\n  },\n\n  token: function(stream, state) {\n    var ctx = state.context;\n    if (stream.sol()) {\n      if (ctx.align == null) ctx.align = false;\n      state.indented = stream.indentation();\n      state.startOfLine = true;\n    }\n    if (stream.eatSpace()) return null;\n    curPunc = null;\n    var style = (state.tokenize || tokenBase)(stream, state);\n    if (style == \"comment\" || style == \"meta\") return style;\n    if (ctx.align == null) ctx.align = true;\n\n    if ((curPunc == \";\" || curPunc == \":\") && ctx.type == \"statement\") popContext(state);\n    else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n    else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n    else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n    else if (curPunc == \"}\") {\n      while (ctx.type == \"statement\") ctx = popContext(state);\n      if (ctx.type == \"}\") ctx = popContext(state);\n      while (ctx.type == \"statement\") ctx = popContext(state);\n    }\n    else if (curPunc == ctx.type) popContext(state);\n    else if (ctx.type == \"}\" || ctx.type == \"top\" || (ctx.type == \"statement\" && curPunc == \"newstatement\"))\n      pushContext(state, stream.column(), \"statement\");\n    state.startOfLine = false;\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    if (state.tokenize != tokenBase && state.tokenize != null) return 0;\n    var firstChar = textAfter && textAfter.charAt(0), ctx = state.context, closing = firstChar == ctx.type;\n    if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : cx.unit);\n    else if (ctx.align) return ctx.column + (closing ? 0 : 1);\n    else return ctx.indented + (closing ? 0 : cx.unit);\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*[{}]$/,\n    commentTokens: {line: \"--\"}\n  }\n}\n"],"names":["words","str","obj","split","i","length","allCaps","toUpperCase","firstCap","charAt","slice","metaHook","stream","eatWhile","curPunc","atoms","hooks","keywords","blockKeywords","isOperatorChar","tokenBase","state","quote","ch","next","result","tokenize","escaped","end","tokenString","test","eat","skipToEnd","cur","current","propertyIsEnumerable","toLowerCase","Context","indented","column","type","align","prev","this","pushContext","col","context","popContext","t","vhdl","startState","indentUnit","startOfLine","token","ctx","sol","indentation","eatSpace","style","indent","textAfter","cx","firstChar","closing","unit","languageData","indentOnInput","commentTokens","line"],"sourceRoot":""}